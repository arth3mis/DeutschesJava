# DOKUMENTATION
# Syntax: "en_begriff; de_1 , de_2"
# Begriffe ohne ";" sind auf Deutsch und Englisch gleich
# "_" = Paket
# ":"  = (in neuer Zeile) extends, statische Übersetzungen müssen von Superklasse kopiert werden
# "<"  = (in neuer Zeile) implements, statische Übersetzungen müssen von Interface kopiert werden
# Namensräume:
# "{}" = Umschließung eines Namensraumes, der den darüberliegenden Begriff als "Elternteil" hat
# "*"  = (NOCH NICHT IMPLEMENTIERT) Verweis auf denselben Sub-Raum wie Begriff, der nach * steht

# Ideen:
# Methoden: kurzer Imperativ, wenn es gut klingt (get=gib, set=setz, füll, versicher...), sonst Imperativ (teste...)/Adjektiv (rund...)/Nomen (copy=kopie)
# add=plus, as=als, is=ist, has=hat
# code=zahl, wenn es passt, sonst Kodierung? oder ?
#
# Interfaces: -bare (z.B. Wiederholbare)

# [JDK-install-path]\lib\src.zip\java.base   da sind alle packages in 1:1 ordnerstruktur mit dateien drin


# Anker für Pakete
_java;           djava
_javax;          djavax

main;           haupt


# Deklarationen
class;          klasse
enum;           numm , aufzählung
interface;      schnittstelle , ganzzahlgesicht , zwischengesicht
record;         rekord
var
void;           leer
extends;        erweitert
implements;     benutzt
import;         zufuhr , einfuhr
package;        paket , päckchen

# Module
module;         modul
{
    exports;        exportiert
    opens;          öffnet
    provides;       liefert
    requires;       benötigt
    to;             zu
    transitive;     übergehend
    uses;           nutzt
    with;           mit
}
open;           offenes


# Kontrollbegriffe
assert;         versicher
break;          brich
case;           fall
catch;          fang
continue;       weiter
do;             tu
else;           sonst
finally;        endlich
for;            für
if;             wenn
return;         zurück
switch;         schalt
throw;          wirf
throws;         wirft
try;            versuch
while;          während , solange
yield;          ernte


# Operator-Begriffe
new;            neu
instanceof;     instanzvon


# Illegale Begriffe
const;          konst
goto;           gehzu


# Speichertypen
boolean;        boolesch
byte;           bifo                        # binärfolge
char;           buch , zeichen , kerl       # buchstabe
short;          kurz
int;            ganz
float;          fließ
long;           lang
double;         doppel


# Literale
false;          nein
null
true;           ja
super;          über
this;           dies


# Modifikatoren
public;         offen , öffentlich
protected;      geschützt
private;        privat , privatisiert
abstract;       abstrakt
final;          endgültig
sealed;         versiegelt
static;         statisch
# fp=fließpunkt
strictfp;       strengfp
default;        standard
native;         gebürtig
synchronized;   synchronisiert
transient;      kurzlebig
volatile;       sprunghaft





# Häufige Begriffe nach Zugriffsoperator
# v.a. Arrays/Strings
length;         länge
# v.a. Enums
values;         werte
valueOf;        wertVon




# Häufig/generell auftretende Begriffe
#

#.class
#    *getClass
#    # (= erhält denselben Namensraum wie vorheriger Begriff)
# !!! feature noch ungenutzt, weil bisher keine $-Methoden betroffen sind
