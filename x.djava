//linienkommentar
/*
 * guten tag
 */

zufuhr djava.werkz.*;
zufuhr djava.werkz.funktion.*;
zufuhr djava.werkz.strom.Strom;
zufuhr djava.werkz.zufall.ZufallsGenerator;
zufuhr statisch djava.sprach.Mathe.PI;
zufuhr statisch djava.sprach.Mathe.rund;

offen klasse x {
	offen statisch leer haupt(Strippe[] argumente) {
		ganz g = 1;
		kurz k = -1;
		lang l = 2;
		fließ f = 3.0f;
		doppel d = 4.0;
		boolesch b = ja;
		System.raus.druckz("\"Hallo Deutschland.\" Ich nutze System.raus.druckz() für diese Zeile.");
		wenn (argumente.länge > 0) System.raus.druckz(Reihen.zuStrippe(argumente));

		x instanz = neu x(42.0, 20.7);
		instanz.rennen(99);
		instanz.länge();

        ZufallsGenerator.StrombarerGenerator.StrombarerGenerator.StrombarerGenerator.StrombarerGenerator sg;

		endgültig ganz J = djavax.schwing.JRahmen.BEENDEN_BEI_SCHLIESSEN;

		Konsument<Strippe> ks = System.raus::druckz;

		Strom.leer();  // darf nicht zu void werden!

		Karte<Ganzzahl, Strippe> m = neu HaschKarte<>(Karte.aus(69, "[Gruß aus der HaschKarte!]"));
		// enthält implizit Kollektion und Strom, wofür Übersetzungen gebraucht werden
		m.werte().strom().fürAlle(System.raus::druckz);

		Abtaster ab = neu Abtaster(System.rein);
		djava.werkz.funktion.GanzVersorger gv = () -> 42;
	}

	leer rennen(ganz i) {
		ganz i2 = (ganz) rund(42 + PI);

		wenn (i > i2+2 || i <= i2)
			zurück;
		sonst {
			i2 += i + 1 - 2*3/4%5 + (i > 5 ? 1 : 0);
			zurück;
		}
	}

	doppel a, b;

	offen x(doppel a, doppel b) {
		dies.a = a;
        dies.b = b;
    }

    offen doppel länge() {
        zurück Mathe.qwrz(a*a+b*b);
    }
}